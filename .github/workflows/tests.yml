name: Tests

on:
  push:
    branches:
      - main
      - staging
  pull_request:
    branches:
      - main
      - staging

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    env:
      NODE_ENV: test
      NODE_OPTIONS: --experimental-vm-modules
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/wrapjet_test

    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: wrapjet_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        id: test
        run: npm test -- --coverage --coverageReporters=json-summary --coverageReporters=text --coverageReporters=lcov
        continue-on-error: true

      - name: Upload coverage reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: coverage/
          retention-days: 30

      - name: Read coverage summary
        id: coverage
        if: always()
        run: |
          if [ -f coverage/coverage-summary.json ]; then
            COVERAGE=$(cat coverage/coverage-summary.json | jq '.total.lines.pct')
            echo "coverage=$COVERAGE" >> $GITHUB_OUTPUT
            echo "has_coverage=true" >> $GITHUB_OUTPUT
          else
            echo "has_coverage=false" >> $GITHUB_OUTPUT
          fi

      - name: Generate test summary
        if: always()
        run: |
          if [ "${{ steps.test.outcome }}" == "success" ]; then
            echo "## ✅ Tests Passed" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "All tests completed successfully!" >> $GITHUB_STEP_SUMMARY
          else
            echo "## ❌ Tests Failed" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Some tests failed. Please review the test output above." >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ steps.coverage.outputs.has_coverage }}" == "true" ]; then
            echo "### 📊 Coverage Report" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "| Metric | Coverage |" >> $GITHUB_STEP_SUMMARY
            echo "|--------|----------|" >> $GITHUB_STEP_SUMMARY
            
            STATEMENTS=$(cat coverage/coverage-summary.json | jq '.total.statements.pct')
            BRANCHES=$(cat coverage/coverage-summary.json | jq '.total.branches.pct')
            FUNCTIONS=$(cat coverage/coverage-summary.json | jq '.total.functions.pct')
            LINES=$(cat coverage/coverage-summary.json | jq '.total.lines.pct')
            
            echo "| Statements | ${STATEMENTS}% |" >> $GITHUB_STEP_SUMMARY
            echo "| Branches | ${BRANCHES}% |" >> $GITHUB_STEP_SUMMARY
            echo "| Functions | ${FUNCTIONS}% |" >> $GITHUB_STEP_SUMMARY
            echo "| Lines | ${LINES}% |" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "📁 Coverage reports are available as artifacts for 30 days." >> $GITHUB_STEP_SUMMARY
          else
            echo "### ⚠️ No Coverage Data" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Coverage data could not be generated. This may indicate:" >> $GITHUB_STEP_SUMMARY
            echo "- Tests did not run successfully" >> $GITHUB_STEP_SUMMARY
            echo "- No test files were found" >> $GITHUB_STEP_SUMMARY
            echo "- Coverage collection failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📝 Test Environment" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Node.js**: 20.x" >> $GITHUB_STEP_SUMMARY
          echo "- **Database**: PostgreSQL 16" >> $GITHUB_STEP_SUMMARY
          echo "- **Environment**: test" >> $GITHUB_STEP_SUMMARY

      - name: Annotate test failures
        if: steps.test.outcome == 'failure'
        run: |
          echo "::error::Tests failed. Please review the test output and fix the failing tests."
          echo "::error::Run 'npm test' locally to reproduce the failures."
          exit 1

      - name: Check test result
        if: steps.test.outcome == 'failure'
        run: exit 1
